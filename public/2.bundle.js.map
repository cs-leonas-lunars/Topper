{"version":3,"sources":["webpack:///./client/AuthButtons.js","webpack:///./client/Home.js","webpack:///./client/loadData.js","webpack:///util (ignored)?a431","webpack:///util (ignored)?8e43"],"names":["AuthButtons","console","log","Home","props","data","setData","useState","accountData","loading","useEffect","findData","loadBlockchainData","pushAddress","account","err","error","setTimeout","pointerEvents","toggleMenu","setComponent","user","username","logout","status","document","getElementById","style","cssText","fm","Fortmatic","recipientUsername","window","ethereum","web3","Web3","enable","recipient","axios","get","location","replace","selectedAddress","walletType","alert","getProvider","currentProvider","eth","getAccounts"],"mappings":"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","file":"./public/2.bundle.js","sourcesContent":["import React from 'react'\n\nconst AuthButtons = () => {\n  console.log('AUTH BUTTons component')\n  // alex could you add a short sentence of why the user would want to connect their account to said service next to/around each button\n  return (\n    <div id=\"authButtons\">\n      <a href=\"/auth/reddit\">Connect to Reddit</a>\n      <a href=\"/auth/google\">Connect to Google</a>\n      <a href=\"/auth/twitter\">Connect to Twitter</a>\n    </div>\n  )\n  // after the user connects there should be a brief message saying\n  // 'Successfully connect to {servic}e' i think that would be a css thing if its not let me know\n}\n\nexport default AuthButtons\n","import React, {useState, useEffect} from 'react'\nimport {logout, pushAddress} from './userActions'\nimport {loadBlockchainData} from './loadData'\nimport AuthButtons from './AuthButtons'\n\n// all components are functional\n// no React.Component\nconst Home = props => {\n  const [data, setData] = useState({\n    accountData: null,\n    loading: true\n  })\n\n  // useEffect for user\n  useEffect(() => {\n    const findData = async () => {\n      try {\n        let accountData = await loadBlockchainData()\n        await pushAddress(accountData.account)\n        setData({\n          accountData,\n          loading: false\n        })\n      } catch (err) {\n        console.error(err)\n      }\n    }\n    setTimeout(() => {\n      findData()\n    }, 2000)\n  }, [])\n\n  return data.loading ? (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <video\n          src=\"/images/background.mp4\"\n          id=\"background\"\n          playsInline\n          muted\n          autoPlay\n          loop\n          style={{pointerEvents: 'none'}}\n        />\n        <div id=\"overlay\" />\n        <div id=\"loadContainer\">\n          <video\n            src=\"/images/loader.mp4\"\n            id=\"loadIcon\"\n            playsInline\n            muted\n            autoPlay\n            loop\n            style={{pointerEvents: 'none'}}\n          />\n          <img id=\"loadJar\" src=\"/images/loadJar.png\" />\n        </div>\n      </header>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img\n          id=\"background\"\n          src=\"/images/topperBackground.gif\"\n          alt=\"background gradient\"\n        />\n        <div id=\"overlay\" onClick={() => toggleMenu(true)} />\n        <img id=\"profileIcon\" src=\"/images/profile.png\" alt=\"profile icon\" />\n        <h1 id=\"logoText\">Topper</h1>\n        <h1 id=\"titleText\" onClick={() => setComponent(0)}>\n          {props.user.username}\n          <AuthButtons />\n        </h1>\n        <p id=\"paraText\">0 ETH</p>\n        <button id=\"learnHome\">Learn More</button>\n        <button id=\"logout\" onClick={() => logout()}>\n          Logout\n        </button>\n        <p id=\"ethereumText\">E T H E R E U M Â· P O W E R E D</p>\n      </header>\n    </div>\n  )\n}\n\n//sidebar\nfunction toggleMenu(status) {\n  if (status) {\n    document.getElementById('menu').style.cssText =\n      'width: 0vw; box-shadow: 0px 0px 0px 0px #000'\n    document.getElementById('closeMenu').style.cssText = 'right: -75vw'\n  } else {\n    document.getElementById('menu').style.cssText =\n      'width: 80vw; box-shadow: -20px 0px 40px -40px #000'\n    document.getElementById('closeMenu').style.cssText = 'right: 5vw'\n  }\n}\n\nexport default Home\n","import Web3 from 'web3'\nimport Fortmatic from 'fortmatic'\nimport axios from 'axios'\n\nlet fm = new Fortmatic('pk_test_E28EBDED6FA415DC', 'ropsten')\n\n// beginning transaction logic\nexport const loadBlockchainData = async recipientUsername => {\n  if (window.ethereum) {\n    console.log('New Metamask')\n    window.web3 = new Web3(window.ethereum)\n    await window.ethereum.enable()\n    let recipient = null\n    if (recipientUsername)\n      recipient = await axios.get(\n        `http://localhost:5000/api/users/${recipientUsername}`\n      )\n    if (!recipient && recipientUsername) {\n      window.location.replace(\n        `https://www.reddit.com/message/compose?to=${recipientUsername}&subject=Topper%20-%20Receive%20Your%20Tip&message=Hey%20${recipientUsername},%20I%20liked%20your%20post.%20Download%20the%20Topper%20Chrome%20Extension%20to%20receive%20your%20tip%20in%20ETH.%20Link%20to%20download:%20https://topper-fsa.herokuapp.com`\n      )\n    } else if (!recipient) {\n      return {\n        account: ethereum.selectedAddress,\n        walletType: 'Metamask'\n      }\n    } else if (recipient && recipientUsername) {\n      return {\n        account: ethereum.selectedAddress,\n        recipient: recipient.data,\n        walletType: 'Metamask'\n      }\n    }\n  } else if (window.web3) {\n    console.log('Old Metamask!')\n    alert('Please Update Your Metamask!')\n    /*\n    window.web3 = new Web3(window.web3.currentProvider)\n    let recipient = await axios.get(\n      `http://localhost:5000/api/users/${recipientUsername}`\n    )\n    return {\n      account: web3.eth.accounts[0],\n      recipient: recipient.data.address,\n    }\n    */\n  } else {\n    console.log('Fortmatic')\n    window.web3 = new Web3(fm.getProvider())\n    await web3.currentProvider.enable()\n    let account = await web3.eth.getAccounts()\n    let recipient = null\n    if (recipientUsername)\n      recipient = await axios.get(\n        `http://localhost:5000/api/users/${recipientUsername}`\n      )\n    if (!recipient && recipientUsername) {\n      window.location.replace(\n        `https://www.reddit.com/message/compose?to=${recipientUsername}&subject=Topper%20-%20Receive%20Your%20Tip&message=Hey%20${recipientUsername},%20I%20liked%20your%20post.%20Download%20the%20Topper%20Chrome%20Extension%20to%20receive%20your%20tip%20in%20ETH.%20Link%20to%20download:%20https://topper-fsa.herokuapp.com`\n      )\n    } else if (!recipient) {\n      return {\n        account: account[0],\n        walletType: 'Fortmatic'\n      }\n    } else if (recipient && recipientUsername) {\n      return {\n        account: account[0],\n        recipient: recipient.data,\n        walletType: 'Fortmatic'\n      }\n    }\n  }\n\n  /* else if (data && data.ethereum !== 'undefined') {\n    console.log('New Metamask (Extension)')\n    // New Metamask (Extension)\n    let recipient = await axios.get(\n      `http://localhost:5000/api/users/${data.recipient}`\n    )\n    if (data.recipient && recipient.data) {\n      return {\n        account: data.account,\n        recipient: recipient.data.address,\n      }\n    } else if (data.recipient)\n      window.open(\n        `https://www.reddit.com/message/compose?to=${data.recipient}&subject=Topper%20-%20Receive%20Your%20Tip&message=Hey%20${data.recipient},%20I%20liked%20your%20post.%20Download%20the%20Topper%20Chrome%20Extension%20to%20receive%20your%20tip%20in%20ETH.%20Link%20to%20download:%20https://topper-fsa.herokuapp.com`\n      )\n    else\n      return {\n        account: data.account,\n      }\n  } else if (window.web3 || (data && data.web3 !== 'undefined')) {\n    // Old Metamask (Both)\n    console.log('Please update your Metamask!')\n    return {}\n  } else if (data) {\n    console.log('Fortmatic (Extension)')\n    // No Metamask - Fortmatic (Extension)\n    window.web3 = new Web3(fm.getProvider())\n    let account = {}\n    let recipient = {}\n    await window.web3.eth.getAccounts(async (error, accounts) => {\n      if (error) throw error\n      account = accounts[0]\n    })\n    await window.web3.eth.getBalance(account, async (error, balance) => {\n      if (error) throw error\n      console.log(balance)\n    })\n    recipient = await axios.get(\n      `http://localhost:5000/api/users/${data.recipient}`\n    )\n    if (data.recipient && recipient.data) {\n      return {\n        account: account,\n        recipient: recipient.data.address,\n      }\n    } else if (data.recipient)\n      window.open(\n        `https://www.reddit.com/message/compose?to=${data.recipient}&subject=Topper%20-%20Receive%20Your%20Tip&message=Hey%20${data.recipient},%20I%20liked%20your%20post.%20Download%20the%20Topper%20Chrome%20Extension%20to%20receive%20your%20tip%20in%20ETH.%20Link%20to%20download:%20https://topper-fsa.herokuapp.com`\n      )\n    else\n      return {\n        account: account,\n      }\n  }*/\n}\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}